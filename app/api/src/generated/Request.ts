// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "Request.proto" (package "OMNI", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { UpdatePlayListPayload } from "./PlayList";
import { GetPlayListPayload } from "./PlayList";
import { GetStreamPayload } from "./Stream";
import { UpdateStreamPayload } from "./Stream";
import { RemoveStreamPayload } from "./Stream";
import { StartStreamPayload } from "./Stream";
/**
 * @generated from protobuf message OMNI.Request
 */
export interface Request {
    /**
     * @generated from protobuf oneof: payload
     */
    payload: {
        oneofKind: "startStreamPayload";
        /**
         * @generated from protobuf field: OMNI.Instance.StartStreamPayload start_stream_payload = 1;
         */
        startStreamPayload: StartStreamPayload;
    } | {
        oneofKind: "removeStreamPayload";
        /**
         * @generated from protobuf field: OMNI.Instance.RemoveStreamPayload remove_stream_payload = 2;
         */
        removeStreamPayload: RemoveStreamPayload;
    } | {
        oneofKind: "updateStreamPayload";
        /**
         * @generated from protobuf field: OMNI.Instance.UpdateStreamPayload update_stream_payload = 3;
         */
        updateStreamPayload: UpdateStreamPayload;
    } | {
        oneofKind: "getStreamPayload";
        /**
         * @generated from protobuf field: OMNI.Instance.GetStreamPayload get_stream_payload = 4;
         */
        getStreamPayload: GetStreamPayload;
    } | {
        oneofKind: "getPlayListPayload";
        /**
         * @generated from protobuf field: OMNI.Instance.GetPlayListPayload get_play_list_payload = 5;
         */
        getPlayListPayload: GetPlayListPayload;
    } | {
        oneofKind: "updatePlayListPayload";
        /**
         * @generated from protobuf field: OMNI.Instance.UpdatePlayListPayload update_play_list_payload = 6;
         */
        updatePlayListPayload: UpdatePlayListPayload;
    } | {
        oneofKind: undefined;
    };
}
// @generated message type with reflection information, may provide speed optimized methods
class Request$Type extends MessageType<Request> {
    constructor() {
        super("OMNI.Request", [
            { no: 1, name: "start_stream_payload", kind: "message", oneof: "payload", T: () => StartStreamPayload },
            { no: 2, name: "remove_stream_payload", kind: "message", oneof: "payload", T: () => RemoveStreamPayload },
            { no: 3, name: "update_stream_payload", kind: "message", oneof: "payload", T: () => UpdateStreamPayload },
            { no: 4, name: "get_stream_payload", kind: "message", oneof: "payload", T: () => GetStreamPayload },
            { no: 5, name: "get_play_list_payload", kind: "message", oneof: "payload", T: () => GetPlayListPayload },
            { no: 6, name: "update_play_list_payload", kind: "message", oneof: "payload", T: () => UpdatePlayListPayload }
        ]);
    }
    create(value?: PartialMessage<Request>): Request {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.payload = { oneofKind: undefined };
        if (value !== undefined)
            reflectionMergePartial<Request>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request): Request {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* OMNI.Instance.StartStreamPayload start_stream_payload */ 1:
                    message.payload = {
                        oneofKind: "startStreamPayload",
                        startStreamPayload: StartStreamPayload.internalBinaryRead(reader, reader.uint32(), options, (message.payload as any).startStreamPayload)
                    };
                    break;
                case /* OMNI.Instance.RemoveStreamPayload remove_stream_payload */ 2:
                    message.payload = {
                        oneofKind: "removeStreamPayload",
                        removeStreamPayload: RemoveStreamPayload.internalBinaryRead(reader, reader.uint32(), options, (message.payload as any).removeStreamPayload)
                    };
                    break;
                case /* OMNI.Instance.UpdateStreamPayload update_stream_payload */ 3:
                    message.payload = {
                        oneofKind: "updateStreamPayload",
                        updateStreamPayload: UpdateStreamPayload.internalBinaryRead(reader, reader.uint32(), options, (message.payload as any).updateStreamPayload)
                    };
                    break;
                case /* OMNI.Instance.GetStreamPayload get_stream_payload */ 4:
                    message.payload = {
                        oneofKind: "getStreamPayload",
                        getStreamPayload: GetStreamPayload.internalBinaryRead(reader, reader.uint32(), options, (message.payload as any).getStreamPayload)
                    };
                    break;
                case /* OMNI.Instance.GetPlayListPayload get_play_list_payload */ 5:
                    message.payload = {
                        oneofKind: "getPlayListPayload",
                        getPlayListPayload: GetPlayListPayload.internalBinaryRead(reader, reader.uint32(), options, (message.payload as any).getPlayListPayload)
                    };
                    break;
                case /* OMNI.Instance.UpdatePlayListPayload update_play_list_payload */ 6:
                    message.payload = {
                        oneofKind: "updatePlayListPayload",
                        updatePlayListPayload: UpdatePlayListPayload.internalBinaryRead(reader, reader.uint32(), options, (message.payload as any).updatePlayListPayload)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Request, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* OMNI.Instance.StartStreamPayload start_stream_payload = 1; */
        if (message.payload.oneofKind === "startStreamPayload")
            StartStreamPayload.internalBinaryWrite(message.payload.startStreamPayload, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* OMNI.Instance.RemoveStreamPayload remove_stream_payload = 2; */
        if (message.payload.oneofKind === "removeStreamPayload")
            RemoveStreamPayload.internalBinaryWrite(message.payload.removeStreamPayload, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* OMNI.Instance.UpdateStreamPayload update_stream_payload = 3; */
        if (message.payload.oneofKind === "updateStreamPayload")
            UpdateStreamPayload.internalBinaryWrite(message.payload.updateStreamPayload, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* OMNI.Instance.GetStreamPayload get_stream_payload = 4; */
        if (message.payload.oneofKind === "getStreamPayload")
            GetStreamPayload.internalBinaryWrite(message.payload.getStreamPayload, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* OMNI.Instance.GetPlayListPayload get_play_list_payload = 5; */
        if (message.payload.oneofKind === "getPlayListPayload")
            GetPlayListPayload.internalBinaryWrite(message.payload.getPlayListPayload, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* OMNI.Instance.UpdatePlayListPayload update_play_list_payload = 6; */
        if (message.payload.oneofKind === "updatePlayListPayload")
            UpdatePlayListPayload.internalBinaryWrite(message.payload.updatePlayListPayload, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message OMNI.Request
 */
export const Request = new Request$Type();
